import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

Future<void> verifyOtp(BuildContext context, String phone, String otp) async {
  final url = Uri.parse('$baseUrl/api/auth/verify-otp');
  final response = await http.post(
    url,
    headers: {'Content-Type': 'application/json'},
    body: jsonEncode({'phone': phone, 'otp': otp}),
  );

  if (response.statusCode == 200) {
    final data = jsonDecode(response.body);
    print('‚úÖ API Response: $data');

    final token = data['token'];
    print('üîê JWT Token: $token');

    // Save token if needed
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString('jwt_token', token);
  } else {
    final body = jsonDecode(response.body);
    final errorCode = body['errorCode'];

    if (response.statusCode == 401 && errorCode == 'TOKEN_EXPIRED') {
      final prefs = await SharedPreferences.getInstance();
      await prefs.remove('jwt_token');

      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Session expired. Please log in again.')),
      );

      Navigator.pushNamedAndRemoveUntil(context, '/login', (_) => false);
    } else {
      print('‚ùå Error ${response.statusCode}: ${response.body}');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Error: ${body['message']}')),
      );
    }
  }
}
